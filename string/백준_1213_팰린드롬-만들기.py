'''
# 백준_1213_팰린드롬 만들기. 실버 3. 풀이: 23.06.27

# How to
- 팰린드롬이 되려면, 전부 짝수 또는 홀수는 한개까지만 가능
- 가운데는 없거나, 문자 1개만 가능
- 알파벳: 개수의 딕셔너리를 사전순으로 정렬
- 하나씩 뽑아서, 개수의 반절만큼의 문자를 추가. 이때 홀수 조건을 만족 못하면, 팰린드롬 불가
- 팰린드롬 수 = 앞 + 중간 + 뒤(앞을 뒤집어서)


# Review
- 가운데는 없거나, 문자 1개만 가능한게 포인트인 문제였다.
'''

# Code
import sys

s = input()
# 알파벳: 개수 딕셔너리
dic = {i: s.count(i) for i in set(s)}
front, mid = '', ''
# 사전순으로 정렬
for k, v in sorted(dic.items()):
    # 홀수개라면,
    if v % 2:
        # 홀수는 1개까지만 가능 -> 초과일 경우, 팰린드롬 불가
        if mid:
            print("I'm Sorry Hansoo")
            sys.exit(0)
        mid += k
    # 개수의 반절만큼의 문자를 추가
    front += k * (v // 2)

# 팰린드롬 수 = 앞 + 중간 + 뒤(앞을 뒤집어서)
print(front + mid + front[::-1])



'''
# Result
풀이 시간:
메모리: 31256 KB
시간: 40 ms
코드 길이: 370 B
'''