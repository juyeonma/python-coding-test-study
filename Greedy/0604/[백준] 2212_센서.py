# 실버와 골드사이의 벽을 뚫기가 힘든 것 같다.
# 어떻게 풀어야할지 감조차 잡히지 않다가 차이가 큰 곳을 기준으로 나눠야 된다는 생각이 들어 그 기준으로 풀어봣는데 맞았다
# 람다식을 공부하면서 문제를 풀었는데 이렇게도 사용할 수 있다는 것을 알았다.

# 처음에 문제가 잘 이해가 안갔다. 독해력이 부족한건가싶다... 그림이라도 하나 나와있었으면 금방 생각햇을 것 같은데..ㅠㅠ
# 예전에 풀어봤던 어떤 문제와 비슷하게 생각하려 해서 그런 것 같다.

# 이 문제를 풀면서 또 느낀게 안 풀리면 관점을 바꿔야된다는 것이다.
# 센서자체에만 집중하다가 차이로 관점을 돌리니 실마리가 보였다.

# 나름 깔끔하게 푼 것 같다.

n = int(input())
k = int(input())
arr = list(map(int,input().split())) # 센서의 배열받기
arr.sort() # 기지국 위치를 정하기 위해 센서 소팅
diff=list(map(lambda x,y:y-x, arr[:-1],arr[1:])) #센서의 간격 배열화
diff.sort() # 센서의 간격 오름차순
print(sum(diff[:n-k]))  # 가장 간격이 넓읍 k개를 빼고 전부 더하기

# 걸린시간 42분
# 메모리 32276kb  시간 48ms