# 풀이방법 떠올린 시간에 비해서 너무 오래 걸렸다. for문안에서 모두 해결하고 싶어서 방법을 찾다가 오래 걸리게 되었다.
# 하지만 마지막 MM으로 끝날 경우 논리에 오류가 있어서 자꾸 틀리다가 반례를 보고 맞히게 되었다.
# 시간이 오래걸리니까 마음이 급해져서 생각을 얕게 한 것 같다. 시간이 오래걸린다는 것은 아직 내가 부족하다는 뜻으로 알고 제대로 생각하는데 더 시간을 써야겠다.
# 처음에 로딩될 때 색깔그림이 안보였는데 이게 보였으면 더 빨리 풀었을 것 같기도 하다

# 모든 경우를 구하는 건 시간초과가 날 것이라 생각했기 때문에 어떠한 기준을 가지고 나눠서 생각해야 된다고 느꼈다.
# 표를 보면 K를 기준으로 숫자를 나눠서 구하면 되는 걸 알 수 있고, 한번에 세는것과 M과K를 나눠서 세는 것이 최대갑과 최솟값이 나온다는 걸 알앗다.
# 그리고 M으로 끝날때는 전부 따로 세는게 최대이고 한번에 구하는게 최소이다 (ex.MMMM - 1111,1000)

# m_cnt if문 부분을 한번에 구하고 싶어서 파이썬에 삼항연산자가 있나 했는데 가끔씩 if문을 한줄로 쓰는 것이 삼항연산자였다...
# split()으로도 풀려고 해봤는데 결국 이것도 조건을 나눠줘야 해서 포기했다.


# 시간이 너무 오래걸린다 싶어서 의식의 흐름대로 풀어버린거라 아래 풀이가 더 깔끔한 것 같다.
s=input()
min_val=""
max_val=""
m_cnt=0
for i in range(len(s)):
    if s[i]=="M":
        m_cnt+=1
    else:
        if m_cnt:
            max_val+="5"+"0"*(m_cnt)
            min_val+="1"+"0"*(m_cnt-1)+"5"
        else:
            max_val+="5"
            min_val+="5"
        m_cnt=0
if m_cnt:
    max_val+="1"*m_cnt
    min_val+=str(int(10**(m_cnt-1)))
print(max_val)
print(min_val)

# 풀이시간 45분
# 메모리 31256KB 시간 52ms

# s=input()
# min_val=""
# max_val=""
# cnt=0
# for i in range(len(s)):
#     cnt+=1
#     if s[i]=="K":   #k에 도달하면 민겸 수 갱신
#         max_val+="5"+"0"*(cnt-1)  #k까지 한번에 센 값을 더해준다
#         if cnt==1:    # 최소값은 한번에 구하지 못하므로 k하나만 있으면 5를 더해주고 m까지 있으면 else문처럼 구한다
#           min_val+="5"
#         else:
#           min_val+=str(10**(cnt-2))+"5"
#         cnt=0   # k를 발견하면 코드 진행후 cnt를  0으로 초기화한다.

# if cnt: # for문이 끝났는데 m을 가지고 있다면 마지막 처리를 해준다
#    max_val+="1"*cnt 
#    min_val+="1"+"0"*(cnt-1)
# print(max_val,min_val,sep="\n")

# 메모리 31256KB 시간 48ms