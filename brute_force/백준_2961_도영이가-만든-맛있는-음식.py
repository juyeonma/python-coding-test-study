'''
# 백준_2961_도영이가 만든 맛있는 음식. 실버 2. 풀이: 23.05.04

# 풀이방법
- 신맛 S: 곱으로, 쓴맛 b: 합으로.
- 재료 갯수 >= 1
- 신맛과 쓴맛의 차이가 가장 작은 요리 만들기.

# 풀이
- 재료를 넣거나, 안 넣거나. 0과 1로 표현할 수 있으므로, 이진수.
- 모든 경우의 수(2**n)에서의 s와 b의 차이값을 구해서, 최솟값으로 갱신.
    - 이때, 이진수로 변환하여 -> 각 자릿수를 탐색하여, 1일때 재료를 넣음
'''

'''
# 보완할 것
- 1과 0으로 표현 가능 할 때는 이진수로 변환한다는 것을 캐치해서 다행이다.
- 그러나, 조금 코드가 지저분한데.. 정리할 수 있을까?
'''

# 풀이 기록
# 재료의 개수
n = int(input())
# 신맛 s, 쓴맛 b
arr = [list(map(int, input().split())) for _ in range(n)]

result = 1e9
for i in range(1, 2**n):
    s, b = 1, 0
    # 이진수로 변환
    tmp = bin(i)[2:].zfill(n)
    # 이진수의 자릿값을 탐색
    for j in range(n):
        # 1: 재료를 넣는다. 0: 재료를 넣지 않는다.
        if tmp[j] == '1':   
            s *= arr[j][0]
            b += arr[j][1]

    result = min(result, abs(s-b))

print(result)

'''
# 결과
메모리: 31256 KB
시간: 44 ms
코드 길이: 337 B
'''