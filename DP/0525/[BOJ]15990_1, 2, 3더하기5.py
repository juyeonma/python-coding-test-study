# -1, -2, -3 값에 영향을 받음
# ex)   -1 -2 -3
#   4 :  2  0  1
#   5 :  1  2  1
#   6 :  3  3  2
#   7 :  5  2  2
#   8 :  4  5  3
#   9 :  8(8의 값의 5 + 3)  7(7의 값의 5 + 2)  6(6의 값의 3 + 3)
import sys
input = sys.stdin.readline
t = int(input())
data = [int(input()) for _ in range(t)]

m = max(data)
dp = [[0, 0, 0] for _ in range(m+1)]
if m >= 1:
    dp[1] = [1, 0, 0]
if m >= 2:
    dp[2] = [0, 1, 0]
if m >= 3:
    dp[3] = [1, 1, 1]
for i in range(4, m+1):
    dp[i][0] = dp[i-1][1] % 1000000009 + dp[i-1][2] % 1000000009
    dp[i][1] = dp[i-2][0] % 1000000009 + dp[i-2][2] % 1000000009
    dp[i][2] = dp[i-3][0] % 1000000009 + dp[i-3][1] % 1000000009

for i in data:
    print(sum(dp[i]) % 1000000009)

# 시간초과 => 질문 게시판을 찾아보니 테스트케이스마다 구하면 시간초과가 난다고 했다
# 근데 알고보니 for문 안에서 나머지 처리를 안하면 시간 초과가 나는 거였다..!
# 테스트케이스마다 구하는 건 시간에서 상관이 없었다..
# 메모리 : 51492KB 시간 : 180ms

# import sys
# input = sys.stdin.readline

# dp = [[0, 0, 0] for _ in range(100001)]
# dp[1] = [1, 0, 0]
# dp[2] = [0, 1, 0]
# dp[3] = [1, 1, 1]
# for i in range(4, 100001):
#     dp[i][0] = dp[i-1][1] % 1000000009 + dp[i-1][2] % 1000000009
#     dp[i][1] = dp[i-2][0] % 1000000009 + dp[i-2][2] % 1000000009
#     dp[i][2] = dp[i-3][0] % 1000000009 + dp[i-3][1] % 1000000009
#     # 더할때에도 나머지 처리로 해줬어야 했다.

# t = int(input())
# for _ in range(t):
#     n = int(input())
#     print(sum(dp[n]) % 1000000009)