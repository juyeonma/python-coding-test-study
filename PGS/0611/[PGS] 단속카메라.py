# 강의실배정이랑 같은 문제같다. 근데 그 때도 해결은 했지만 잘 풀지 못했고 정석 풀이를 완전히 이해를 못한 모양인지 오래걸렸다.
# 논리를 생각한 후 그 논리에 문제가 없는지 오래 생각하게 되었고, 왠지 맞는거 같은데라는 생각으로 풀었다.

# 내가 생각한 논리가 맞긴 한데 의심이 자꾸든다.. 왜 꼭 이렇게 해야하지라는 생각이 든다 
# 예시에서 첫 번째 이동 경로와 두 번재 이동경로는 하나의 카메라로 확인이 가능하고, 세 번째 이동경로는 같은 카메라로 확인이 불가능 하기 때문에 새로운 카메라를 필요로 한다는 것 까지는 이해했다.
# 그런데 두번째와 세번째 이동경로가 겹치는데 두번째를 건너뛰고 세번째 이동경로를 기준으로 세우는 이유가 궁금하다
# 물론 직관적으로 알아서 풀긴했는데 정확히 어떤 논리에 의해 두번째 이동경로를 확인안하고 세번째에서 확인하면 되는걸까?
# 그렇게 할 수 밖에 없는 이유를 찾고 싶다
 

# 진출지점을 기준으로 오름차순 정렬을한다
# 진출지점을 차례대로 그 다음 진출지점의 진입지점과 비교한다
# 진입지점이 진출지점보다 작거나 같으면 같은 카메라로 단속가능하다
# 커지면 다른 카메라를 써야한다
# 커졌을 때 그 이전의 도로는 이미 카메라로 확인이 가능하므로 커졌던 카메라를 새롭게 비교대상으로 선정


def solution(routes):
    answer = 1 # 차의 개수는 1이상이므로 카메라는 1이상이다 따라서 1부터시작
    routes.sort(key=lambda x:x[1]) # 진출시점을 기준으로 정렬
    temp=routes[0] # 첫번째 이동경로의 끝점 비교대상으로 선정
    for i in range(1,len(routes)):
        if temp[1]<routes[i][0]: # 비교대상의 범위를 넘어갈 경우 새롭게 비교대상으로 선정하고 카메라 증가
            temp=routes[i]
            answer+=1        
    return answer

#20분