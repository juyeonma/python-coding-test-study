# 이전에 풀어본 문제다. 그 때는 이분탐색을 막접했던 시기라 잘 못풀었던것 같기도한데
# 이번에는 그때보다는 수월하게 풀었다.
# 이분탐색로직은 대소관계랑 반환하는 값을 뭘로 설정할지가 까다로운 것 같다

# 심사관은 십만명이고 걸리는 시간은 십억이므로 완전탐색으로는 풀 수 없다.
# 걸리는시간을 1분부터 차례대로 확인하지 못하므로 이분탐색을 적용해야한다.
# 그러면 몇십번정도면 확인이 가능하다
# 그렇다면 심사관을 몇십번 돌린다고하여도 몇백만 정도밖에 안되므로 이분탐색으로 충분히 구할 수 있다
# 시간의 최대값은 심사관이 처리할 수 있는 최소시간 곱하기 n을 넘을 수 없으므로 이 수를 최대값으로 설정한다
#그렇게 0부터 최대값사이를 이분탐색하면서 기준은 각 심사관이 처리할 수있는 사람수의 총합으로 설정해서 풀면된다

def solution(n, times):
    en = min(times)*n
    st = 0
    
    while st<=en:
        mid = (st+en)//2
        s=sum(map(lambda x:mid//x,times)) # 모든 심사관이 처리할 수있는 사람 수의 합
        if s>=n:
            en=mid-1
        else:
            st=mid+1
    
    return st

#19분